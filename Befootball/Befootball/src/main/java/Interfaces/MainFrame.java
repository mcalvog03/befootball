/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import ComponentesModelos.ClasificacionTableModel;
import ComponentesModelos.EstiloTablaClasificacion;
import ComponentesModelos.EstiloTablaJugadores;
import ComponentesModelos.EstiloTablaPartidos;
import ComponentesModelos.EstiloTablaPartidosEquipo;
import ComponentesModelos.JugadoresTableModel;
import ComponentesModelos.PartidosEquipoTableModel;
import ComponentesModelos.PartidosTableModel;
import Funcionalidades.ConfiguradorDeInterfaz;
import Funcionalidades.ImageRenderer;
import FuncionalidadesHibernate.ObtenerSubirDatos;
import POJOS.Clasificacion;
import POJOS.Equipos;
import POJOS.Jugadores;
import POJOS.Partidos;
import POJOS.Usuarios;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.URL;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import java.net.URI;

public class MainFrame extends javax.swing.JFrame {

    private SessionFactory factory;
    private ObtenerSubirDatos obtenerDatos;
    private int pkUsuario;
    private boolean estiloInterfaz;

    // Informaci贸n servidor socket
    private static final String SERVER_IP = "192.168.1.45";
    private static final int SERVER_PORT = 5000;
    private static final String LOCAL_FOLDER = "EscudosDescargados";

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        this(0, null);
    }

    public MainFrame(int pkUsuario, String rol) {
        initComponents();
        setLocationRelativeTo(null);
        Image icon = Toolkit.getDefaultToolkit().getImage("src/main/resources/images/logo.png");
        setIconImage(icon);
        // Crear carpeta de escudos descargados en caso de que no exista
        crearDirectorioEscudos();
        // Inicializar factory
        initializeSessionFactory();
        // Crear objeto de obtenci贸n de datos
        obtenerDatos = new ObtenerSubirDatos(factory);
        // Rellenar el combox de ligas
        rellenarComboxLigas();

        // Cargar contenido del usuario en caso de haber iniciado sesi贸n
        if (pkUsuario != 0) {
            System.out.println("Cargando datos del usuario...");
            cargarPanelUsuario(pkUsuario);
            // Establecer valor en la variabla del id del usuario que ha iniciado sesi贸n
            this.pkUsuario = pkUsuario;
        }

        System.out.println("Configurando interfaz por rol...");
        if (rol != null) {
            ConfiguradorDeInterfaz.configurarPorRol(rol, this);
        }

        // Estilizar tablas
        EstiloTablaPartidos.estilizarTabla(partidosTable);
        EstiloTablaClasificacion.estilizarTabla(clasificacionTable);
        // Inicializar metodo de javaHelp
        ayuda();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        appPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jPanel4 = new javax.swing.JPanel();
        resizableImageLabel1 = new ComponentesModelos.ResizableImageLabel();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ligaComboBox = new javax.swing.JComboBox<>();
        resultadosClasifiacionPanel = new javax.swing.JPanel();
        resultadosPanel = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        resultadosButton = new javax.swing.JButton();
        clasificacionResultadosButton = new javax.swing.JButton();
        usuarioResultadosButton = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jornadaComboBox = new javax.swing.JComboBox<>();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        partidosTable = new javax.swing.JTable();
        clasificacionPanel = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        clasificacionTable = new javax.swing.JTable();
        jPanel26 = new javax.swing.JPanel();
        jToolBar5 = new javax.swing.JToolBar();
        resultadosClasificacionButton = new javax.swing.JButton();
        clasificacionButton = new javax.swing.JButton();
        usuariosClasificacionButton = new javax.swing.JButton();
        userPanel = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        resizableImageLabel2 = new ComponentesModelos.ResizableImageLabel();
        nombreUsuarioLabel = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        infoUsuarioPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rolUsuarioLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        correoUsuarioLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        fechaRegistroUsuarioLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        idUsuarioLabel = new javax.swing.JLabel();
        equipoFavPanel = new javax.swing.JPanel();
        escudoFavoritoPanel = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        equipoFavoritoLabel = new javax.swing.JLabel();
        editarEquipoFavButton = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jToolBar4 = new javax.swing.JToolBar();
        resultadosUsuarioButton = new javax.swing.JButton();
        clasificacionUsuarioButton = new javax.swing.JButton();
        usuarioButton = new javax.swing.JButton();
        equipoPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        resizableImageLabel3 = new ComponentesModelos.ResizableImageLabel();
        nombreEquipoLabel = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        paisEquipoLabel = new javax.swing.JLabel();
        ligaEquipoLabel = new javax.swing.JLabel();
        posicionLigaEquipoLabel = new javax.swing.JLabel();
        estadioEquipoLabel = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel38 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        partidosTableEquipo = new javax.swing.JTable();
        jPanel30 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        escudoEquipoPanel = new javax.swing.JPanel();
        jPanel39 = new javax.swing.JPanel();
        agregarEquipoFavButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jugadoresEquipoTable = new javax.swing.JTable();
        jPanel29 = new javax.swing.JPanel();
        jToolBar6 = new javax.swing.JToolBar();
        resultadosEquipoButton = new javax.swing.JButton();
        clasificacionEquipoButton = new javax.swing.JButton();
        usuarioEquipoButton = new javax.swing.JButton();
        partidoPanel = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        localPanel = new javax.swing.JPanel();
        golesLocalLabel = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        golesVisitanteLabel = new javax.swing.JLabel();
        visitantePanel = new javax.swing.JPanel();
        jPanel35 = new javax.swing.JPanel();
        estadoLabel = new javax.swing.JLabel();
        jornadaLabel = new javax.swing.JLabel();
        ligaLabel = new javax.swing.JLabel();
        fechaPartidoLabel = new javax.swing.JLabel();
        jPanel40 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        nombreLocalLabel = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        nombreVisitanteLabel = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        editarPartidoButton = new javax.swing.JButton();
        jPanel36 = new javax.swing.JPanel();
        jToolBar7 = new javax.swing.JToolBar();
        resultadosPartidoButton = new javax.swing.JButton();
        clasificacionPartidoButton = new javax.swing.JButton();
        usuarioPartidoButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        inicioMenu = new javax.swing.JMenu();
        editarEquipoFavMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        logoutMenuItem = new javax.swing.JMenuItem();
        salirMenuItem = new javax.swing.JMenuItem();
        ajustesjMenu = new javax.swing.JMenu();
        cambiarNombreMenuItem = new javax.swing.JMenuItem();
        cambiarCorreoMenuItem = new javax.swing.JMenuItem();
        cambiarContrase帽aMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        estiloInterfazCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        devMenu = new javax.swing.JMenu();
        crearPartidoMenuItem = new javax.swing.JMenuItem();
        editarRolMenuItem = new javax.swing.JMenuItem();
        ayudaMenu = new javax.swing.JMenu();
        webMenuItem = new javax.swing.JMenuItem();
        acercaDeMenuItem = new javax.swing.JMenuItem();
        ayudaMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Befootball");
        setBackground(new java.awt.Color(0, 0, 0));

        mainPanel.setLayout(new java.awt.CardLayout());

        appPanel.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jToolBar1.setBackground(new java.awt.Color(229, 229, 0));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jPanel4.setBackground(new java.awt.Color(229, 229, 0));

        resizableImageLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        resizableImageLabel1.setText("resizableImageLabel1");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resizableImageLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(resizableImageLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, Short.MAX_VALUE)
        );

        jToolBar1.add(jPanel4);

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jToolBar1.add(jSeparator1);

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 69, 193));
        jLabel1.setText("Liga:");
        jToolBar1.add(jLabel1);

        jPanel2.setBackground(new java.awt.Color(229, 229, 0));
        jPanel2.setMaximumSize(new java.awt.Dimension(192, 100));

        ligaComboBox.setBackground(new java.awt.Color(255, 0, 0));
        ligaComboBox.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        ligaComboBox.setMaximumSize(new java.awt.Dimension(35, 34));
        ligaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ligaComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ligaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ligaComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        jToolBar1.add(jPanel2);

        jPanel1.add(jToolBar1);

        appPanel.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        resultadosClasifiacionPanel.setBackground(new java.awt.Color(0, 0, 0));
        resultadosClasifiacionPanel.setLayout(new java.awt.CardLayout());

        resultadosPanel.setBackground(new java.awt.Color(0, 0, 0));
        resultadosPanel.setLayout(new java.awt.BorderLayout());

        jPanel8.setBackground(new java.awt.Color(0, 0, 0));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        jToolBar2.setBackground(new java.awt.Color(0, 0, 0));
        jToolBar2.setBorder(null);
        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        resultadosButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        resultadosButton.setForeground(new java.awt.Color(102, 255, 255));
        resultadosButton.setText("Resultados");
        resultadosButton.setContentAreaFilled(false);
        resultadosButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resultadosButton.setFocusable(false);
        resultadosButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        resultadosButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(resultadosButton);

        clasificacionResultadosButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        clasificacionResultadosButton.setForeground(new java.awt.Color(102, 255, 255));
        clasificacionResultadosButton.setText("Clasificaci贸n");
        clasificacionResultadosButton.setContentAreaFilled(false);
        clasificacionResultadosButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clasificacionResultadosButton.setFocusable(false);
        clasificacionResultadosButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clasificacionResultadosButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clasificacionResultadosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clasificacionResultadosButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(clasificacionResultadosButton);

        usuarioResultadosButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        usuarioResultadosButton.setForeground(new java.awt.Color(102, 255, 255));
        usuarioResultadosButton.setText("Usuario");
        usuarioResultadosButton.setContentAreaFilled(false);
        usuarioResultadosButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        usuarioResultadosButton.setFocusable(false);
        usuarioResultadosButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        usuarioResultadosButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        usuarioResultadosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioResultadosButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(usuarioResultadosButton);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        resultadosPanel.add(jPanel8, java.awt.BorderLayout.PAGE_END);

        jPanel9.setBackground(new java.awt.Color(0, 0, 0));
        jPanel9.setLayout(new javax.swing.BoxLayout(jPanel9, javax.swing.BoxLayout.X_AXIS));

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 246, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel9.add(jPanel10);

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(229, 229, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Jornada");
        jPanel9.add(jLabel2);

        jornadaComboBox.setBackground(new java.awt.Color(229, 229, 0));
        jornadaComboBox.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jornadaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jornadaComboBoxActionPerformed(evt);
            }
        });
        jPanel9.add(jornadaComboBox);

        jPanel11.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 246, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel9.add(jPanel11);

        resultadosPanel.add(jPanel9, java.awt.BorderLayout.PAGE_START);

        jPanel12.setBackground(new java.awt.Color(0, 0, 0));
        jPanel12.setLayout(new java.awt.BorderLayout());

        partidosTable.setBackground(new java.awt.Color(0, 0, 0));
        partidosTable.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        partidosTable.setForeground(new java.awt.Color(255, 255, 255));
        partidosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Escudo local", "Equipo local", "Goles local", "Goles visitante", "Equipo visitante", "Escudo visitante"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        partidosTable.setGridColor(new java.awt.Color(255, 255, 255));
        partidosTable.setRowHeight(70);
        partidosTable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        partidosTable.setSelectionForeground(new java.awt.Color(0, 255, 0));
        partidosTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        partidosTable.setShowGrid(false);
        partidosTable.setShowHorizontalLines(true);
        partidosTable.getTableHeader().setReorderingAllowed(false);
        partidosTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                partidosTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(partidosTable);

        jPanel12.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        resultadosPanel.add(jPanel12, java.awt.BorderLayout.CENTER);

        resultadosClasifiacionPanel.add(resultadosPanel, "card2");

        clasificacionPanel.setLayout(new java.awt.BorderLayout());

        jPanel21.setBackground(new java.awt.Color(0, 0, 0));
        jPanel21.setLayout(new java.awt.BorderLayout());

        jPanel22.setBackground(new java.awt.Color(0, 0, 0));
        jPanel22.setLayout(new javax.swing.BoxLayout(jPanel22, javax.swing.BoxLayout.X_AXIS));

        jPanel23.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 239, Short.MAX_VALUE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel22.add(jPanel23);

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(229, 229, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Clasificaci贸n");
        jPanel22.add(jLabel5);

        jPanel24.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel22.add(jPanel24);

        jPanel21.add(jPanel22, java.awt.BorderLayout.PAGE_START);

        jPanel25.setBackground(new java.awt.Color(0, 0, 0));
        jPanel25.setLayout(new java.awt.BorderLayout());

        clasificacionTable.setBackground(new java.awt.Color(0, 0, 0));
        clasificacionTable.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        clasificacionTable.setForeground(new java.awt.Color(255, 255, 255));
        clasificacionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Posici贸n", "Escudo", "Equipo", "PTS", "PJ", "PG", "PE", "PP", "DG"
            }
        ));
        clasificacionTable.setGridColor(new java.awt.Color(255, 255, 255));
        clasificacionTable.setRowHeight(70);
        clasificacionTable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        clasificacionTable.setSelectionForeground(new java.awt.Color(0, 255, 0));
        clasificacionTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        clasificacionTable.setShowHorizontalLines(true);
        clasificacionTable.getTableHeader().setReorderingAllowed(false);
        clasificacionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clasificacionTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(clasificacionTable);

        jPanel25.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanel21.add(jPanel25, java.awt.BorderLayout.CENTER);

        jPanel26.setBackground(new java.awt.Color(0, 0, 0));
        jPanel26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        jToolBar5.setBackground(new java.awt.Color(0, 0, 0));
        jToolBar5.setBorder(null);
        jToolBar5.setFloatable(false);
        jToolBar5.setRollover(true);

        resultadosClasificacionButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        resultadosClasificacionButton.setForeground(new java.awt.Color(102, 255, 255));
        resultadosClasificacionButton.setText("Resultados");
        resultadosClasificacionButton.setContentAreaFilled(false);
        resultadosClasificacionButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resultadosClasificacionButton.setFocusable(false);
        resultadosClasificacionButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        resultadosClasificacionButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        resultadosClasificacionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultadosClasificacionButtonActionPerformed(evt);
            }
        });
        jToolBar5.add(resultadosClasificacionButton);

        clasificacionButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        clasificacionButton.setForeground(new java.awt.Color(102, 255, 255));
        clasificacionButton.setText("Clasificaci贸n");
        clasificacionButton.setContentAreaFilled(false);
        clasificacionButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clasificacionButton.setFocusable(false);
        clasificacionButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clasificacionButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar5.add(clasificacionButton);

        usuariosClasificacionButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        usuariosClasificacionButton.setForeground(new java.awt.Color(102, 255, 255));
        usuariosClasificacionButton.setText("Usuario");
        usuariosClasificacionButton.setContentAreaFilled(false);
        usuariosClasificacionButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        usuariosClasificacionButton.setFocusable(false);
        usuariosClasificacionButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        usuariosClasificacionButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        usuariosClasificacionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuariosClasificacionButtonActionPerformed(evt);
            }
        });
        jToolBar5.add(usuariosClasificacionButton);

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar5, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jToolBar5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel21.add(jPanel26, java.awt.BorderLayout.PAGE_END);

        clasificacionPanel.add(jPanel21, java.awt.BorderLayout.CENTER);

        resultadosClasifiacionPanel.add(clasificacionPanel, "card3");

        appPanel.add(resultadosClasifiacionPanel, java.awt.BorderLayout.CENTER);

        mainPanel.add(appPanel, "card2");

        userPanel.setLayout(new java.awt.BorderLayout());

        jPanel14.setBackground(new java.awt.Color(0, 0, 0));
        jPanel14.setLayout(new java.awt.BorderLayout());

        jPanel16.setBackground(new java.awt.Color(0, 0, 0));
        jPanel16.setLayout(new javax.swing.BoxLayout(jPanel16, javax.swing.BoxLayout.X_AXIS));

        jPanel17.setBackground(new java.awt.Color(0, 0, 0));

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));

        resizableImageLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        resizableImageLabel2.setText("resizableImageLabel1");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(resizableImageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resizableImageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(162, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel16.add(jPanel17);

        nombreUsuarioLabel.setFont(new java.awt.Font("sansserif", 1, 48)); // NOI18N
        nombreUsuarioLabel.setForeground(new java.awt.Color(229, 229, 0));
        nombreUsuarioLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nombreUsuarioLabel.setText("Usuario");
        jPanel16.add(nombreUsuarioLabel);

        jPanel18.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 269, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 112, Short.MAX_VALUE)
        );

        jPanel16.add(jPanel18);

        jPanel14.add(jPanel16, java.awt.BorderLayout.PAGE_START);

        jPanel19.setBackground(new java.awt.Color(0, 0, 0));
        jPanel19.setLayout(new java.awt.GridLayout(1, 2));

        infoUsuarioPanel.setBackground(new java.awt.Color(223, 31, 31));

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Rol del usuario:");

        rolUsuarioLabel.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        rolUsuarioLabel.setForeground(new java.awt.Color(255, 255, 255));
        rolUsuarioLabel.setText("rol");

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Correo:");

        correoUsuarioLabel.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        correoUsuarioLabel.setForeground(new java.awt.Color(255, 255, 255));
        correoUsuarioLabel.setText("correo");

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 30)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Informaci贸n del usuario");

        jLabel8.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Fecha de registro:");

        fechaRegistroUsuarioLabel.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        fechaRegistroUsuarioLabel.setForeground(new java.awt.Color(255, 255, 255));
        fechaRegistroUsuarioLabel.setText("fecha");

        jLabel9.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel9.setText("ID:");

        idUsuarioLabel.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        idUsuarioLabel.setText("id");

        javax.swing.GroupLayout infoUsuarioPanelLayout = new javax.swing.GroupLayout(infoUsuarioPanel);
        infoUsuarioPanel.setLayout(infoUsuarioPanelLayout);
        infoUsuarioPanelLayout.setHorizontalGroup(
            infoUsuarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoUsuarioPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoUsuarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(infoUsuarioPanelLayout.createSequentialGroup()
                        .addGroup(infoUsuarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(infoUsuarioPanelLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idUsuarioLabel))
                            .addGroup(infoUsuarioPanelLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(correoUsuarioLabel))
                            .addGroup(infoUsuarioPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rolUsuarioLabel))
                            .addGroup(infoUsuarioPanelLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fechaRegistroUsuarioLabel)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        infoUsuarioPanelLayout.setVerticalGroup(
            infoUsuarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoUsuarioPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(infoUsuarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rolUsuarioLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoUsuarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(correoUsuarioLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoUsuarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(fechaRegistroUsuarioLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                .addGroup(infoUsuarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(idUsuarioLabel))
                .addContainerGap())
        );

        jPanel19.add(infoUsuarioPanel);

        equipoFavPanel.setBackground(new java.awt.Color(0, 181, 12));

        escudoFavoritoPanel.setBackground(new java.awt.Color(0, 181, 12));
        escudoFavoritoPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        escudoFavoritoPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                escudoFavoritoPanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout escudoFavoritoPanelLayout = new javax.swing.GroupLayout(escudoFavoritoPanel);
        escudoFavoritoPanel.setLayout(escudoFavoritoPanelLayout);
        escudoFavoritoPanelLayout.setHorizontalGroup(
            escudoFavoritoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
        );
        escudoFavoritoPanelLayout.setVerticalGroup(
            escudoFavoritoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 235, Short.MAX_VALUE)
        );

        jPanel33.setBackground(new java.awt.Color(0, 181, 12));

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Equipo favorito");

        equipoFavoritoLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        equipoFavoritoLabel.setForeground(new java.awt.Color(255, 255, 255));
        equipoFavoritoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        equipoFavoritoLabel.setText("        nombre del equipo");

        editarEquipoFavButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit20.png"))); // NOI18N
        editarEquipoFavButton.setToolTipText("Editar equipo favorito");
        editarEquipoFavButton.setContentAreaFilled(false);
        editarEquipoFavButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editarEquipoFavButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarEquipoFavButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addComponent(equipoFavoritoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editarEquipoFavButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(equipoFavoritoLabel)
                    .addComponent(editarEquipoFavButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout equipoFavPanelLayout = new javax.swing.GroupLayout(equipoFavPanel);
        equipoFavPanel.setLayout(equipoFavPanelLayout);
        equipoFavPanelLayout.setHorizontalGroup(
            equipoFavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(equipoFavPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(equipoFavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(escudoFavoritoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        equipoFavPanelLayout.setVerticalGroup(
            equipoFavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(equipoFavPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(escudoFavoritoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel19.add(equipoFavPanel);

        jPanel14.add(jPanel19, java.awt.BorderLayout.CENTER);

        jPanel15.setBackground(new java.awt.Color(0, 0, 0));
        jPanel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        jToolBar4.setBackground(new java.awt.Color(0, 0, 0));
        jToolBar4.setBorder(null);
        jToolBar4.setFloatable(false);
        jToolBar4.setRollover(true);

        resultadosUsuarioButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        resultadosUsuarioButton.setForeground(new java.awt.Color(102, 255, 255));
        resultadosUsuarioButton.setText("Resultados");
        resultadosUsuarioButton.setContentAreaFilled(false);
        resultadosUsuarioButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resultadosUsuarioButton.setFocusable(false);
        resultadosUsuarioButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        resultadosUsuarioButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        resultadosUsuarioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultadosUsuarioButtonActionPerformed(evt);
            }
        });
        jToolBar4.add(resultadosUsuarioButton);

        clasificacionUsuarioButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        clasificacionUsuarioButton.setForeground(new java.awt.Color(102, 255, 255));
        clasificacionUsuarioButton.setText("Clasificaci贸n");
        clasificacionUsuarioButton.setContentAreaFilled(false);
        clasificacionUsuarioButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clasificacionUsuarioButton.setFocusable(false);
        clasificacionUsuarioButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clasificacionUsuarioButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clasificacionUsuarioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clasificacionUsuarioButtonActionPerformed(evt);
            }
        });
        jToolBar4.add(clasificacionUsuarioButton);

        usuarioButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        usuarioButton.setForeground(new java.awt.Color(102, 255, 255));
        usuarioButton.setText("Usuario");
        usuarioButton.setContentAreaFilled(false);
        usuarioButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        usuarioButton.setFocusable(false);
        usuarioButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        usuarioButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        usuarioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioButtonActionPerformed(evt);
            }
        });
        jToolBar4.add(usuarioButton);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar4, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel14.add(jPanel15, java.awt.BorderLayout.PAGE_END);

        userPanel.add(jPanel14, java.awt.BorderLayout.CENTER);

        mainPanel.add(userPanel, "card2");

        equipoPanel.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(0, 51, 204));
        jPanel3.setLayout(new java.awt.GridLayout(1, 3));

        jPanel13.setBackground(new java.awt.Color(0, 51, 204));

        jPanel7.setBackground(new java.awt.Color(0, 51, 204));

        resizableImageLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        resizableImageLabel3.setText("resizableImageLabel1");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(resizableImageLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resizableImageLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.add(jPanel13);

        nombreEquipoLabel.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        nombreEquipoLabel.setForeground(new java.awt.Color(255, 255, 255));
        nombreEquipoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nombreEquipoLabel.setText("Equipo");
        jPanel3.add(nombreEquipoLabel);

        jPanel5.setBackground(new java.awt.Color(0, 51, 204));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 238, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 112, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel5);

        equipoPanel.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel20.setLayout(new java.awt.GridLayout(1, 0));

        jPanel28.setBackground(new java.awt.Color(0, 0, 0));
        jPanel28.setLayout(new java.awt.GridLayout(2, 0));

        jPanel27.setBackground(new java.awt.Color(0, 0, 0));

        paisEquipoLabel.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        paisEquipoLabel.setForeground(new java.awt.Color(255, 255, 255));
        paisEquipoLabel.setText("Pais:");

        ligaEquipoLabel.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        ligaEquipoLabel.setForeground(new java.awt.Color(255, 255, 255));
        ligaEquipoLabel.setText("Liga:");

        posicionLigaEquipoLabel.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        posicionLigaEquipoLabel.setForeground(new java.awt.Color(255, 255, 255));
        posicionLigaEquipoLabel.setText("Posici贸n en liga:");

        estadioEquipoLabel.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        estadioEquipoLabel.setForeground(new java.awt.Color(255, 255, 255));
        estadioEquipoLabel.setText("Estadio:");

        jLabel12.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Informaci贸n");

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                    .addComponent(paisEquipoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ligaEquipoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(posicionLigaEquipoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(estadioEquipoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paisEquipoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ligaEquipoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(posicionLigaEquipoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(estadioEquipoLabel)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel28.add(jPanel27);

        jPanel38.setBackground(new java.awt.Color(255, 0, 0));
        jPanel38.setLayout(new java.awt.BorderLayout());

        jLabel16.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Proximos partidos");
        jPanel38.add(jLabel16, java.awt.BorderLayout.PAGE_START);

        partidosTableEquipo.setBackground(new java.awt.Color(0, 0, 0));
        partidosTableEquipo.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        partidosTableEquipo.setForeground(new java.awt.Color(255, 255, 255));
        partidosTableEquipo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Escudo local", "Equipo local", "Equipo visitante", "Escudo visitante", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        partidosTableEquipo.setGridColor(new java.awt.Color(255, 255, 255));
        partidosTableEquipo.setRowHeight(70);
        partidosTableEquipo.setSelectionBackground(new java.awt.Color(0, 0, 0));
        partidosTableEquipo.setSelectionForeground(new java.awt.Color(0, 255, 0));
        partidosTableEquipo.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        partidosTableEquipo.setShowGrid(false);
        partidosTableEquipo.setShowHorizontalLines(true);
        partidosTableEquipo.getTableHeader().setReorderingAllowed(false);
        partidosTableEquipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                partidosTableEquipoMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(partidosTableEquipo);

        jPanel38.add(jScrollPane5, java.awt.BorderLayout.CENTER);

        jPanel28.add(jPanel38);

        jPanel20.add(jPanel28);

        jPanel30.setBackground(new java.awt.Color(102, 102, 102));
        jPanel30.setLayout(new java.awt.GridLayout(2, 1));

        jPanel31.setBackground(new java.awt.Color(102, 102, 102));

        escudoEquipoPanel.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout escudoEquipoPanelLayout = new javax.swing.GroupLayout(escudoEquipoPanel);
        escudoEquipoPanel.setLayout(escudoEquipoPanelLayout);
        escudoEquipoPanelLayout.setHorizontalGroup(
            escudoEquipoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
        );
        escudoEquipoPanelLayout.setVerticalGroup(
            escudoEquipoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 109, Short.MAX_VALUE)
        );

        jPanel39.setBackground(new java.awt.Color(102, 102, 102));

        agregarEquipoFavButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/favorite20.png"))); // NOI18N
        agregarEquipoFavButton.setToolTipText("Agregar equipo favorito");
        agregarEquipoFavButton.setContentAreaFilled(false);
        agregarEquipoFavButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel10.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("    Escudo");

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agregarEquipoFavButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(agregarEquipoFavButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(escudoEquipoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(escudoEquipoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel30.add(jPanel31);

        jPanel32.setBackground(new java.awt.Color(255, 255, 0));
        jPanel32.setLayout(new java.awt.BorderLayout());

        jLabel11.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Jugadores");
        jPanel32.add(jLabel11, java.awt.BorderLayout.PAGE_START);

        jugadoresEquipoTable.setBackground(new java.awt.Color(0, 0, 0));
        jugadoresEquipoTable.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jugadoresEquipoTable.setForeground(new java.awt.Color(255, 255, 255));
        jugadoresEquipoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Nacionalidad", "Posici贸n", "Dorsal"
            }
        ));
        jugadoresEquipoTable.setGridColor(new java.awt.Color(255, 255, 255));
        jugadoresEquipoTable.setRowHeight(20);
        jugadoresEquipoTable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        jugadoresEquipoTable.setSelectionForeground(new java.awt.Color(0, 255, 0));
        jugadoresEquipoTable.setShowGrid(true);
        jugadoresEquipoTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jugadoresEquipoTable);

        jPanel32.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel30.add(jPanel32);

        jPanel20.add(jPanel30);

        equipoPanel.add(jPanel20, java.awt.BorderLayout.CENTER);

        jPanel29.setBackground(new java.awt.Color(0, 0, 0));
        jPanel29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        jToolBar6.setBackground(new java.awt.Color(0, 0, 0));
        jToolBar6.setBorder(null);
        jToolBar6.setFloatable(false);
        jToolBar6.setRollover(true);

        resultadosEquipoButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        resultadosEquipoButton.setForeground(new java.awt.Color(102, 255, 255));
        resultadosEquipoButton.setText("Resultados");
        resultadosEquipoButton.setContentAreaFilled(false);
        resultadosEquipoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resultadosEquipoButton.setFocusable(false);
        resultadosEquipoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        resultadosEquipoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        resultadosEquipoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultadosEquipoButtonActionPerformed(evt);
            }
        });
        jToolBar6.add(resultadosEquipoButton);

        clasificacionEquipoButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        clasificacionEquipoButton.setForeground(new java.awt.Color(102, 255, 255));
        clasificacionEquipoButton.setText("Clasificaci贸n");
        clasificacionEquipoButton.setContentAreaFilled(false);
        clasificacionEquipoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clasificacionEquipoButton.setFocusable(false);
        clasificacionEquipoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clasificacionEquipoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clasificacionEquipoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clasificacionEquipoButtonActionPerformed(evt);
            }
        });
        jToolBar6.add(clasificacionEquipoButton);

        usuarioEquipoButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        usuarioEquipoButton.setForeground(new java.awt.Color(102, 255, 255));
        usuarioEquipoButton.setText("Usuario");
        usuarioEquipoButton.setContentAreaFilled(false);
        usuarioEquipoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        usuarioEquipoButton.setFocusable(false);
        usuarioEquipoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        usuarioEquipoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        usuarioEquipoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioEquipoButtonActionPerformed(evt);
            }
        });
        jToolBar6.add(usuarioEquipoButton);

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar6, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jToolBar6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        equipoPanel.add(jPanel29, java.awt.BorderLayout.PAGE_END);

        mainPanel.add(equipoPanel, "card4");

        partidoPanel.setLayout(new java.awt.BorderLayout());

        jPanel34.setBackground(new java.awt.Color(0, 0, 0));
        jPanel34.setLayout(new java.awt.GridLayout(1, 0));

        localPanel.setBackground(new java.awt.Color(0, 0, 0));
        localPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout localPanelLayout = new javax.swing.GroupLayout(localPanel);
        localPanel.setLayout(localPanelLayout);
        localPanelLayout.setHorizontalGroup(
            localPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 143, Short.MAX_VALUE)
        );
        localPanelLayout.setVerticalGroup(
            localPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel34.add(localPanel);

        golesLocalLabel.setFont(new java.awt.Font("sansserif", 1, 48)); // NOI18N
        golesLocalLabel.setForeground(new java.awt.Color(255, 255, 255));
        golesLocalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        golesLocalLabel.setText("0");
        jPanel34.add(golesLocalLabel);

        jLabel17.setFont(new java.awt.Font("sansserif", 1, 48)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("-");
        jPanel34.add(jLabel17);

        golesVisitanteLabel.setFont(new java.awt.Font("sansserif", 1, 48)); // NOI18N
        golesVisitanteLabel.setForeground(new java.awt.Color(255, 255, 255));
        golesVisitanteLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        golesVisitanteLabel.setText("0");
        jPanel34.add(golesVisitanteLabel);

        visitantePanel.setBackground(new java.awt.Color(0, 0, 0));
        visitantePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout visitantePanelLayout = new javax.swing.GroupLayout(visitantePanel);
        visitantePanel.setLayout(visitantePanelLayout);
        visitantePanelLayout.setHorizontalGroup(
            visitantePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 143, Short.MAX_VALUE)
        );
        visitantePanelLayout.setVerticalGroup(
            visitantePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel34.add(visitantePanel);

        partidoPanel.add(jPanel34, java.awt.BorderLayout.PAGE_START);

        jPanel35.setBackground(new java.awt.Color(0, 0, 0));

        estadoLabel.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        estadoLabel.setForeground(new java.awt.Color(255, 255, 255));
        estadoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        estadoLabel.setText("Estado: X");

        jornadaLabel.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jornadaLabel.setForeground(new java.awt.Color(255, 255, 255));
        jornadaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jornadaLabel.setText("Jornada: X");

        ligaLabel.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        ligaLabel.setForeground(new java.awt.Color(255, 255, 255));
        ligaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ligaLabel.setText("Liga: X");

        fechaPartidoLabel.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        fechaPartidoLabel.setForeground(new java.awt.Color(255, 255, 255));
        fechaPartidoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fechaPartidoLabel.setText("Fecha: X");

        jPanel40.setBackground(new java.awt.Color(0, 0, 0));
        jPanel40.setLayout(new java.awt.GridLayout(1, 0));
        jPanel40.add(jLabel26);

        nombreLocalLabel.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        nombreLocalLabel.setForeground(new java.awt.Color(255, 255, 0));
        nombreLocalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nombreLocalLabel.setText("local");
        jPanel40.add(nombreLocalLabel);
        jPanel40.add(jLabel27);

        nombreVisitanteLabel.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        nombreVisitanteLabel.setForeground(new java.awt.Color(255, 255, 0));
        nombreVisitanteLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nombreVisitanteLabel.setText("visitante");
        jPanel40.add(nombreVisitanteLabel);
        jPanel40.add(jLabel24);

        editarPartidoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit20.png"))); // NOI18N
        editarPartidoButton.setContentAreaFilled(false);
        editarPartidoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel40, javax.swing.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel35Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(editarPartidoButton))
                    .addComponent(estadoLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jornadaLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ligaLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                    .addComponent(fechaPartidoLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel35Layout.createSequentialGroup()
                .addComponent(jPanel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(estadoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jornadaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ligaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fechaPartidoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                .addComponent(editarPartidoButton)
                .addContainerGap())
        );

        partidoPanel.add(jPanel35, java.awt.BorderLayout.CENTER);

        jPanel36.setBackground(new java.awt.Color(0, 0, 0));
        jPanel36.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        jToolBar7.setBackground(new java.awt.Color(0, 0, 0));
        jToolBar7.setBorder(null);
        jToolBar7.setFloatable(false);
        jToolBar7.setRollover(true);

        resultadosPartidoButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        resultadosPartidoButton.setForeground(new java.awt.Color(102, 255, 255));
        resultadosPartidoButton.setText("Resultados");
        resultadosPartidoButton.setContentAreaFilled(false);
        resultadosPartidoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resultadosPartidoButton.setFocusable(false);
        resultadosPartidoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        resultadosPartidoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        resultadosPartidoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultadosPartidoButtonActionPerformed(evt);
            }
        });
        jToolBar7.add(resultadosPartidoButton);

        clasificacionPartidoButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        clasificacionPartidoButton.setForeground(new java.awt.Color(102, 255, 255));
        clasificacionPartidoButton.setText("Clasificaci贸n");
        clasificacionPartidoButton.setContentAreaFilled(false);
        clasificacionPartidoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clasificacionPartidoButton.setFocusable(false);
        clasificacionPartidoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clasificacionPartidoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clasificacionPartidoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clasificacionPartidoButtonActionPerformed(evt);
            }
        });
        jToolBar7.add(clasificacionPartidoButton);

        usuarioPartidoButton.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        usuarioPartidoButton.setForeground(new java.awt.Color(102, 255, 255));
        usuarioPartidoButton.setText("Usuario");
        usuarioPartidoButton.setContentAreaFilled(false);
        usuarioPartidoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        usuarioPartidoButton.setFocusable(false);
        usuarioPartidoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        usuarioPartidoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        usuarioPartidoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioPartidoButtonActionPerformed(evt);
            }
        });
        jToolBar7.add(usuarioPartidoButton);

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar7, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel36Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jToolBar7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        partidoPanel.add(jPanel36, java.awt.BorderLayout.PAGE_END);

        mainPanel.add(partidoPanel, "card5");

        inicioMenu.setText("Inicio");

        editarEquipoFavMenuItem.setText("Editar equipo favorito");
        editarEquipoFavMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarEquipoFavMenuItemActionPerformed(evt);
            }
        });
        inicioMenu.add(editarEquipoFavMenuItem);
        inicioMenu.add(jSeparator3);

        logoutMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout20.png"))); // NOI18N
        logoutMenuItem.setText("Cerrar sesi贸n");
        logoutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutMenuItemActionPerformed(evt);
            }
        });
        inicioMenu.add(logoutMenuItem);

        salirMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        salirMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close20.png"))); // NOI18N
        salirMenuItem.setText("Salir");
        salirMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirMenuItemActionPerformed(evt);
            }
        });
        inicioMenu.add(salirMenuItem);

        jMenuBar1.add(inicioMenu);

        ajustesjMenu.setText("Ajustes");

        cambiarNombreMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editBlack20.png"))); // NOI18N
        cambiarNombreMenuItem.setText("Editar nombre");
        cambiarNombreMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarNombreMenuItemActionPerformed(evt);
            }
        });
        ajustesjMenu.add(cambiarNombreMenuItem);

        cambiarCorreoMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editBlack20.png"))); // NOI18N
        cambiarCorreoMenuItem.setText("Editar correo");
        cambiarCorreoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarCorreoMenuItemActionPerformed(evt);
            }
        });
        ajustesjMenu.add(cambiarCorreoMenuItem);

        cambiarContrase帽aMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editBlack20.png"))); // NOI18N
        cambiarContrase帽aMenuItem.setText("Editar contrase帽a");
        cambiarContrase帽aMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarContrase帽aMenuItemActionPerformed(evt);
            }
        });
        ajustesjMenu.add(cambiarContrase帽aMenuItem);
        ajustesjMenu.add(jSeparator2);

        estiloInterfazCheckBoxMenuItem.setText("Interfaz cl谩sica");
        estiloInterfazCheckBoxMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estiloInterfazCheckBoxMenuItemActionPerformed(evt);
            }
        });
        ajustesjMenu.add(estiloInterfazCheckBoxMenuItem);

        jMenuBar1.add(ajustesjMenu);

        devMenu.setText("Dev");

        crearPartidoMenuItem.setText("Crear partido");
        crearPartidoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearPartidoMenuItemActionPerformed(evt);
            }
        });
        devMenu.add(crearPartidoMenuItem);

        editarRolMenuItem.setText("Editar rol de usuario");
        editarRolMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarRolMenuItemActionPerformed(evt);
            }
        });
        devMenu.add(editarRolMenuItem);

        jMenuBar1.add(devMenu);

        ayudaMenu.setText("Ayuda");

        webMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/globe20.png"))); // NOI18N
        webMenuItem.setText("P谩gina web");
        webMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                webMenuItemActionPerformed(evt);
            }
        });
        ayudaMenu.add(webMenuItem);

        acercaDeMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/info20.png"))); // NOI18N
        acercaDeMenuItem.setText("Acerca de");
        acercaDeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acercaDeMenuItemActionPerformed(evt);
            }
        });
        ayudaMenu.add(acercaDeMenuItem);

        ayudaMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        ayudaMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/help20.png"))); // NOI18N
        ayudaMenuItem.setText("Ayuda");
        ayudaMenu.add(ayudaMenuItem);

        jMenuBar1.add(ayudaMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usuarioResultadosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioResultadosButtonActionPerformed
        // TODO add your handling code here:
        mostrarPanelUsuario();
    }//GEN-LAST:event_usuarioResultadosButtonActionPerformed

    private void resultadosUsuarioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultadosUsuarioButtonActionPerformed
        // TODO add your handling code here:
        mostrarPanelResultadosUsuario();
    }//GEN-LAST:event_resultadosUsuarioButtonActionPerformed

    private void clasificacionResultadosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clasificacionResultadosButtonActionPerformed
        // TODO add your handling code here:
        mostrarPanelClasificacion();
    }//GEN-LAST:event_clasificacionResultadosButtonActionPerformed

    private void clasificacionUsuarioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clasificacionUsuarioButtonActionPerformed
        // TODO add your handling code here:
        mostrarPanelClasificacionUsuario();
    }//GEN-LAST:event_clasificacionUsuarioButtonActionPerformed

    private void resultadosClasificacionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultadosClasificacionButtonActionPerformed
        // TODO add your handling code here:
        mostrarPanelResultados();
    }//GEN-LAST:event_resultadosClasificacionButtonActionPerformed

    private void usuariosClasificacionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuariosClasificacionButtonActionPerformed
        // TODO add your handling code here:
        mostrarPanelUsuario();
    }//GEN-LAST:event_usuariosClasificacionButtonActionPerformed

    private void salirMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirMenuItemActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_salirMenuItemActionPerformed

    private void crearPartidoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearPartidoMenuItemActionPerformed
        // TODO add your handling code here:
        CrearPartidoDialog crearPartido = new CrearPartidoDialog(this, rootPaneCheckingEnabled);
        crearPartido.setVisible(true);
    }//GEN-LAST:event_crearPartidoMenuItemActionPerformed

    private void ligaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ligaComboBoxActionPerformed
        // TODO add your handling code here:
        // Obtener liga seleccionada
        String ligaSeleccionada = (String) ligaComboBox.getSelectedItem();

        if (ligaSeleccionada != null) {
            // Vaciar comboBox
            jornadaComboBox.removeAllItems();
            // Rellenar el comboBox con las jornadas de la liga seleccionada
            rellenarComboboxJornadas(ligaSeleccionada);

            // Auto-seleccionar la primera jornada para evitar que el comboBox est茅 vac铆o
            if (jornadaComboBox.getItemCount() > 0) {
                jornadaComboBox.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_ligaComboBoxActionPerformed

    private void resultadosEquipoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultadosEquipoButtonActionPerformed
        // TODO add your handling code here:
        mostrarPanelResultadosUsuario();
    }//GEN-LAST:event_resultadosEquipoButtonActionPerformed

    private void clasificacionEquipoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clasificacionEquipoButtonActionPerformed
        // TODO add your handling code here:
        mostrarPanelResultadosUsuario();
        mostrarPanelClasificacion();
    }//GEN-LAST:event_clasificacionEquipoButtonActionPerformed

    private void resultadosPartidoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultadosPartidoButtonActionPerformed
        // TODO add your handling code here:
        mostrarPanelResultadosUsuario();
    }//GEN-LAST:event_resultadosPartidoButtonActionPerformed

    private void clasificacionPartidoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clasificacionPartidoButtonActionPerformed
        // TODO add your handling code here:
        mostrarPanelClasificacionUsuario();
    }//GEN-LAST:event_clasificacionPartidoButtonActionPerformed

    private void jornadaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jornadaComboBoxActionPerformed
        // TODO add your handling code here:
        mostrarResultadosPartidos();
        mostrarClasificacion();
    }//GEN-LAST:event_jornadaComboBoxActionPerformed

    private void usuarioEquipoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioEquipoButtonActionPerformed
        // TODO add your handling code here:
        mostrarPanelUsuario();
        cargarPanelUsuario(pkUsuario);
    }//GEN-LAST:event_usuarioEquipoButtonActionPerformed

    private void usuarioPartidoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioPartidoButtonActionPerformed
        // TODO add your handling code here:
        mostrarPanelUsuario();
        cargarPanelUsuario(pkUsuario);
    }//GEN-LAST:event_usuarioPartidoButtonActionPerformed

    private void escudoFavoritoPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_escudoFavoritoPanelMouseClicked
        // TODO add your handling code here:
        Usuarios usuario = obtenerDatos.obtenerDatosUsuario(pkUsuario);
        mostrarPanelEquipo(usuario.getEquipoFavorito().getPkEquipo());
    }//GEN-LAST:event_escudoFavoritoPanelMouseClicked

    private void usuarioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioButtonActionPerformed
        // TODO add your handling code here:
        cargarPanelUsuario(pkUsuario);
    }//GEN-LAST:event_usuarioButtonActionPerformed

    private void estiloInterfazCheckBoxMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estiloInterfazCheckBoxMenuItemActionPerformed
        // TODO add your handling code here:
        estiloInterfaz = estiloInterfazCheckBoxMenuItem.isSelected();
        if (estiloInterfaz) {
            cambioClasico();
        } else {
            cambioPorDefecto();
        }
    }//GEN-LAST:event_estiloInterfazCheckBoxMenuItemActionPerformed

    private void logoutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutMenuItemActionPerformed
        // TODO add your handling code here:
        logOut();
    }//GEN-LAST:event_logoutMenuItemActionPerformed

    private void editarEquipoFavButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarEquipoFavButtonActionPerformed
        // TODO add your handling code here:
        // Abrir di谩logo para seleccionar el nuevo equipo favorito junto con la id del usuario activo
        editarEquipoFavoritoPerfil();
        cargarPanelUsuario(pkUsuario);
    }//GEN-LAST:event_editarEquipoFavButtonActionPerformed

    private void partidosTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_partidosTableMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) { // Doble clic
            // Obtener la fila seleccionada
            int filaSeleccionada = partidosTable.getSelectedRow();
            if (filaSeleccionada != -1) {
                // Obtener la ID del partido desde la fila seleccionada
                Partidos partidoSeleccionado = ((PartidosTableModel) partidosTable.getModel()).getPartidoEnFila(filaSeleccionada);
                int idPartido = partidoSeleccionado.getPkPartido();

                // Llamar al m茅todo que muestra los detalles del partido
                mostrarPanelPartido(idPartido);
            }
        }
    }//GEN-LAST:event_partidosTableMouseClicked

    private void editarRolMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarRolMenuItemActionPerformed
        // TODO add your handling code here:
        EditarRolUsuario editarRolUsuario = new EditarRolUsuario(this, rootPaneCheckingEnabled);
        editarRolUsuario.setVisible(true);
    }//GEN-LAST:event_editarRolMenuItemActionPerformed

    private void clasificacionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clasificacionTableMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) { // Doble clic
            // Obtener la fila seleccionada
            int filaSeleccionada = clasificacionTable.getSelectedRow();
            if (filaSeleccionada != -1) {
                // Obtener la ID del equipo de la fila seleccionada
                Equipos equipoSeleccionado = ((ClasificacionTableModel) clasificacionTable.getModel()).getEquipoEnFila(filaSeleccionada);
                int idEquipo = equipoSeleccionado.getPkEquipo();

                // Llamar al m茅todo que muestra los detalles del partido
                mostrarPanelEquipo(idEquipo);
            }
        }
    }//GEN-LAST:event_clasificacionTableMouseClicked

    private void acercaDeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acercaDeMenuItemActionPerformed
        // TODO add your handling code here:
        AcercaDeDialog acercaDe = new AcercaDeDialog(this, rootPaneCheckingEnabled);
        acercaDe.setVisible(true);
    }//GEN-LAST:event_acercaDeMenuItemActionPerformed

    private void cambiarNombreMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarNombreMenuItemActionPerformed
        // TODO add your handling code here:
        editarNombreUsuario();
    }//GEN-LAST:event_cambiarNombreMenuItemActionPerformed

    private void cambiarCorreoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarCorreoMenuItemActionPerformed
        // TODO add your handling code here:
        editarCorreoUsuario();
    }//GEN-LAST:event_cambiarCorreoMenuItemActionPerformed

    private void cambiarContrase帽aMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarContrase帽aMenuItemActionPerformed
        // TODO add your handling code here:
        editarContrase帽aUsuario();
    }//GEN-LAST:event_cambiarContrase帽aMenuItemActionPerformed

    private void webMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_webMenuItemActionPerformed
        // TODO add your handling code here:
        try {
            Desktop.getDesktop().browse(new URI("http://192.168.1.45:8069/"));
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "No se pudo abrir la p谩gina web");
        }
    }//GEN-LAST:event_webMenuItemActionPerformed

    private void editarEquipoFavMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarEquipoFavMenuItemActionPerformed
        // TODO add your handling code here:
        editarEquipoFavoritoPerfil();
        cargarPanelUsuario(pkUsuario);
    }//GEN-LAST:event_editarEquipoFavMenuItemActionPerformed

    private void partidosTableEquipoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_partidosTableEquipoMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) { // Doble clic
            // Obtener la fila seleccionada
            int filaSeleccionada = partidosTableEquipo.getSelectedRow();
            if (filaSeleccionada != -1) {
                // Obtener la ID del partido desde la fila seleccionada
                Partidos partidoSeleccionado = ((PartidosEquipoTableModel) partidosTableEquipo.getModel()).getPartidoEnFila(filaSeleccionada);
                int idPartido = partidoSeleccionado.getPkPartido();

                // Llamar al m茅todo que muestra los detalles del partido
                mostrarPanelPartido(idPartido);
            }
        }
    }//GEN-LAST:event_partidosTableEquipoMouseClicked

    // Crear factorty
    private void initializeSessionFactory() {
        try {
            factory = new Configuration().configure().buildSessionFactory();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al inicializar Hibernate: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Cerrar sesi贸n y mostrar de nuevo el dialogo de incio de sesi贸n
    public void logOut() {
        int opcion = JOptionPane.showConfirmDialog(
                null,
                "驴Est谩s seguro de que deseas cerrar sesi贸n?",
                "Confirmar cierre de sesi贸n",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
        );

        if (opcion == JOptionPane.YES_OPTION) {
            pkUsuario = 0;
            this.dispose();
            LoginDialog login = new LoginDialog(null, true);
            login.setVisible(true);
            System.out.println("Sesi贸n cerrada correctamente.");
        }
    }

    // Mostrar panel princiapl
    public void mostrarPanelPrincipal() {
        CardLayout cl = (CardLayout) mainPanel.getLayout();
        // A帽adir nombre del panel a cambiar en el panel elegido con cardLayout
        mainPanel.add(appPanel, "appPanel");
        // Mostrar el panel
        cl.show(mainPanel, "appPanel");
    }

    // Mostrar panel de usuario
    public void mostrarPanelUsuario() {
        CardLayout cl = (CardLayout) mainPanel.getLayout();
        // A帽adir nombre del panel a cambiar en el panel elegido con cardLayout
        mainPanel.add(userPanel, "userPanel");
        // Mostrar el panel
        cl.show(mainPanel, "userPanel");
    }

    // Mostrar panel de resultados
    public void mostrarPanelResultados() {
        CardLayout cl = (CardLayout) resultadosClasifiacionPanel.getLayout();
        // A帽adir nombre del panel a cambiar en el panel elegido con cardLayout
        resultadosClasifiacionPanel.add(resultadosPanel, "resultadosPanel");
        // Mostrar el panel
        cl.show(resultadosClasifiacionPanel, "resultadosPanel");
    }

    // Mostrar panel de clasificaci贸n
    public void mostrarPanelClasificacion() {
        CardLayout cl = (CardLayout) resultadosClasifiacionPanel.getLayout();
        // A帽adir nombre del panel a cambiar en el panel elegido con cardLayout
        resultadosClasifiacionPanel.add(clasificacionPanel, "clasificacionPanel");
        // Mostrar el panel
        cl.show(resultadosClasifiacionPanel, "clasificacionPanel");
    }

    // Mostrar panel de equipo
    public void mostrarPanelEquipo(int pkEquipo) {
        CardLayout cl = (CardLayout) mainPanel.getLayout();
        // A帽adir nombre del panel a cambiar en el panel elegido con cardLayout
        mainPanel.add(equipoPanel, "equipoPanel");
        // Mostrar el panel
        cl.show(mainPanel, "equipoPanel");

        // Cargar informaci贸n en el panel
        cargarPanelEquipo(pkEquipo);
    }

    // Mostrar panel de un partido con detalles
    public void mostrarPanelPartido(int pkEquipo) {
        CardLayout cl = (CardLayout) mainPanel.getLayout();
        // A帽adir nombre del panel a cambiar en el panel elegido con cardLayout
        mainPanel.add(partidoPanel, "partidoPanel");
        // Mostrar el panel
        cl.show(mainPanel, "partidoPanel");

        // Cargar informaci贸n en el panel
        cargarDetallesPartido(pkEquipo);
    }

    // Mostrar panel de resultados desde usuario
    public void mostrarPanelResultadosUsuario() {
        mostrarPanelPrincipal();
        mostrarPanelResultados();
    }

    // Mostrar panel de clasificai贸n desde el panel de usuario
    public void mostrarPanelClasificacionUsuario() {
        mostrarPanelPrincipal();
        mostrarPanelClasificacion();
    }

    // Interfaz para usuario normal
    public void ventanaUsuario() {
        devMenu.setVisible(false);
        editarPartidoButton.setVisible(false);
    }

    // Interfaz para invitado
    public void ventanaInvitado() {
        ventanaUsuario();
        usuarioButton.setVisible(false);
        usuarioResultadosButton.setVisible(false);
        usuariosClasificacionButton.setVisible(false);
        cambiarNombreMenuItem.setVisible(false);
        cambiarCorreoMenuItem.setVisible(false);
        cambiarContrase帽aMenuItem.setVisible(false);
        jSeparator2.setVisible(false);
        editarEquipoFavMenuItem.setVisible(false);
        jSeparator3.setVisible(false);
        usuarioEquipoButton.setVisible(false);
        usuarioPartidoButton.setVisible(false);
    }

    // Cargar panel de usuario con datos obtenidos comparadno login con la base de datos
    public void cargarPanelUsuario(int pkUsuario) {
        // Crear un objeto de usuario con la informaci贸n de usuario logueado
        Usuarios usuario = obtenerDatos.obtenerDatosUsuario(pkUsuario);
        // Mostrar nombre del usuario en el label
        nombreUsuarioLabel.setText(usuario.getNombre());

        // Mostrar nombre del equipo ajustando la longitud para no estropear el layout
        String nombreUsuario = usuario.getNombre();
        if (nombreUsuario.length() > 20) {
            String textoCorto = nombreUsuario.substring(0, 18) + "...";
            nombreUsuarioLabel.setText(textoCorto);
            nombreUsuarioLabel.setToolTipText(nombreUsuario);
        } else {
            nombreUsuarioLabel.setText(nombreUsuario);
            nombreUsuarioLabel.setToolTipText(null);
        }

        // Mostrar rol del usuario en el label
        rolUsuarioLabel.setText(usuario.getRol().getRol());
        // Mostrar correo del usuario en el label
        correoUsuarioLabel.setText(usuario.getCorreo());
        // Formato para mostrar la fecha y hora de registro del usuario
        DateTimeFormatter formatoDateTime = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        // Mostrar fecha de registro del usuario en el label
        fechaRegistroUsuarioLabel.setText(usuario.getFechaRegistro().format(formatoDateTime));
        // Mostrar id del usuario en el label
        idUsuarioLabel.setText(String.valueOf(pkUsuario));

        // No cargar escudo en caso de ser null
        if (usuario.getEquipoFavorito() != null && usuario.getEquipoFavorito().getNombreEquipo() != null) {
            // Mostrar nombre del equipo favorito
            equipoFavoritoLabel.setText(usuario.getEquipoFavorito().getNombreEquipo());
            // Cargar escudo favorito
            obtenerEscudoFavorito(pkUsuario);
        } else {
            equipoFavoritoLabel.setText("Sin equipo favorito");
        }

    }

    // Cargar informaci贸n en el panel de equipo
    public void cargarPanelEquipo(int pkEquipo) {
        // Crear un objeto de equipo con la informaci贸n del equipo seleccionado
        Equipos equipo = obtenerDatos.obtenerDatosEquipos(pkEquipo);

        // Cambiar valor comboBox liga para poder cargar la posicion del equipo correctamente para evitar que en el panel de equipo se cargue un equipo de una liga que no esta seleccionada en el comboBox
        ligaComboBox.setSelectedItem(equipo.getLiga().getNombreLiga());

        // Buscar la posici贸n del equipo en la tabla
        int filaPosicion = -1;
        for (int i = 0; i < clasificacionTable.getRowCount(); i++) {
            // Obtener el valor de la columna Equipo en la fila i
            Object valorEquipo = clasificacionTable.getValueAt(i, clasificacionTable.getColumnModel().getColumnIndex("Equipo"));

            // Verificar si el equipo en esa fila es el que se esta buscando
            if (valorEquipo != null && valorEquipo.toString().equals(equipo.getNombreEquipo())) {
                // Guardar el indice de la fila donde se encuentra el equipo
                filaPosicion = i;
                break;
            }
        }

        // Verificar si el equipo fue encontrado en la tabla
        if (filaPosicion != -1) {
            // Obtener el 铆ndice de la columna "Posici贸n"
            int columnaPosicion = clasificacionTable.getColumnModel().getColumnIndex("Posici贸n");

            // Verificar si la columna "Posici贸n" existe
            if (columnaPosicion != -1) {
                // Obtener el valor de la celda en la columna "Posici贸n" y la fila encontrada
                Object valorPosicion = clasificacionTable.getValueAt(filaPosicion, columnaPosicion);

                // Actualizar la etiqueta con el valor de la posici贸n
                posicionLigaEquipoLabel.setText("Posici贸n en liga: " + valorPosicion.toString());
            } else {
                posicionLigaEquipoLabel.setText("Posici贸n en liga: null");
            }
        } else {
            // Si no se encuentra el equipo en la tabla
            posicionLigaEquipoLabel.setText("Posici贸n en liga: null");
        }

        // Mostrar nombre del equipo ajustando la longitud para no estropear el layout
        String nombreEquipo = equipo.getNombreEquipo();
        if (nombreEquipo.length() > 20) {
            String textoCorto = nombreEquipo.substring(0, 18) + "...";
            nombreEquipoLabel.setText(textoCorto);
            nombreEquipoLabel.setToolTipText(nombreEquipo);
        } else {
            nombreEquipoLabel.setText(nombreEquipo);
            nombreEquipoLabel.setToolTipText(null);
        }
        // Mostrar pais del equipo
        paisEquipoLabel.setText("Pais: " + equipo.getLiga().getPais().getNombrePais());
        // Mostrar liga del equipo
        ligaEquipoLabel.setText("Liga: " + equipo.getLiga().getNombreLiga());
        // Mostrar nombre del estadio del equipo
        estadioEquipoLabel.setText("Estadio: " + equipo.getEstadio().getNombreEstadio());
        // Cargar escudo del equipo seleccionado
        obtenerEscudo(pkEquipo);
        // Cargar proximos partidos
        mostrarResultadosPartidosEquipo(pkEquipo);
        // Cargar tabla con los jugadores del equipo seleccionado
        cargarTablaJugadoresEquipo(pkEquipo);
        // Llamar al metodo para agregar el equipo cuando se pulse el boton con el equipo adecuado
        agregarEquipoFavorito(pkEquipo);

    }

    // Cargar tabla de los jugadores del equipo seleccionado
    public void cargarTablaJugadoresEquipo(int pkEquipo) {
        // Crear una lista de los jugadores del equipo seleccionado
        List<Jugadores> jugadores = obtenerDatos.obtenerJugadoresEquipo(pkEquipo);

        // Verificar que la lista no est茅 vac铆a
        if (jugadores != null && !jugadores.isEmpty()) {
            // Cargar la lista en el modelo de la tabla
            JugadoresTableModel model = new JugadoresTableModel(jugadores);
            // Actualizar la tabla
            jugadoresEquipoTable.setModel(model);
            // Estilizar la tabla
            EstiloTablaJugadores.estilizarTabla(jugadoresEquipoTable);
        } else {
            // Vaciar tabla por si hay datos de jugadores de otros equipos
            DefaultTableModel emptyModel = new DefaultTableModel(new Object[][]{}, new String[]{"Nombre", "Nacionalidad", "Posici贸n", "Dorsal"});
            jugadoresEquipoTable.setModel(emptyModel);

            // Estilizar la tabla
            EstiloTablaJugadores.estilizarTabla(jugadoresEquipoTable);

            // Mostrar mensaje si no hay jugadores
            JOptionPane.showMessageDialog(null, "No se encontraron jugadores para este equipo.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }

    // Cargar panel de detalles del partido
    public void cargarDetallesPartido(int pkPartido) {
        // Crear un objeto de equipo con la informaci贸n del partido seleccionado
        Partidos partido = obtenerDatos.obtenerDatosPartido(pkPartido);
        // Mostrar goles local
        golesLocalLabel.setText(String.valueOf(partido.getGolesLocal()));
        // Mostrar goles visitante
        golesVisitanteLabel.setText(String.valueOf(partido.getGolesVisitante()));
        // Mostrar nombre del equipo local ajustando la longitud para no estropear el layout
        String nombreEquipoLocal = partido.getEquipoLocal().getNombreEquipo();
        if (nombreEquipoLocal.length() > 20) {
            String textoCorto = nombreEquipoLocal.substring(0, 18) + "...";
            nombreLocalLabel.setText(textoCorto);
            nombreLocalLabel.setToolTipText(nombreEquipoLocal);
        } else {
            nombreLocalLabel.setText(nombreEquipoLocal);
            nombreLocalLabel.setToolTipText(null);
        }
        // Mostrar nombre del equipo visitante ajustando la longitud para no estropear el layout
        String nombreEquipoVisitante = partido.getEquipoVisitante().getNombreEquipo();
        if (nombreEquipoVisitante.length() > 20) {
            String textoCorto = nombreEquipoVisitante.substring(0, 18) + "...";
            nombreVisitanteLabel.setText(textoCorto);
            nombreVisitanteLabel.setToolTipText(nombreEquipoVisitante);
        } else {
            nombreVisitanteLabel.setText(nombreEquipoVisitante);
            nombreVisitanteLabel.setToolTipText(null);
        }
        // Mostrar estado del partido
        estadoLabel.setText("Estado: " + partido.getEstado());
        // Mostrar jornada del partido
        jornadaLabel.setText("Jornada: " + partido.getJornada());
        // Mostrar liga del partido
        ligaLabel.setText("Liga: " + partido.getLiga().getNombreLiga());
        // Mostrar fecha del partido
        fechaPartidoLabel.setText("Fecha: " + partido.getFecha());
        // Mostrar escudo local
        mostrarEscudoEnPanel(partido.getEquipoLocal().getEscudo(), localPanel);
        // Mostrar escudo visitante
        mostrarEscudoEnPanel(partido.getEquipoVisitante().getEscudo(), visitantePanel);

        // A帽adir un MouseListener al panel local para mostrar m谩s detalles cuando se haga clic
        localPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                // Llamar al m茅todo para mostrar m谩s detalles del equipo local
                mostrarPanelEquipo(partido.getEquipoLocal().getPkEquipo());
            }
        });

        // Eliminamos tambi茅n los MouseListeners anteriores del panel visitante, si los hubiera
        for (MouseListener ml : visitantePanel.getMouseListeners()) {
            visitantePanel.removeMouseListener(ml);
        }

        // A帽adir un MouseListener al panel visitante para mostrar m谩s detalles cuando se haga clic
        visitantePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                // Llamar al m茅todo para mostrar m谩s detalles del equipo visitante
                mostrarPanelEquipo(partido.getEquipoVisitante().getPkEquipo());
            }
        });

        // Eliminar los anteriores para evitar m煤ltiples ejecuciones
        for (ActionListener al : editarPartidoButton.getActionListeners()) {
            editarPartidoButton.removeActionListener(al);
        }

        // A帽adir un ActionListener al boton para editar los detalles del partido (funcionalidad para desarrolladores)
        editarPartidoButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Partidos partido = obtenerDatos.obtenerDatosPartido(pkPartido);
                editarPartido(pkPartido, partido.getGolesLocal(), partido.getGolesVisitante(), partido.getEstado());
            }
        });

    }

    public void editarPartido(int pkPartido, int golesLocal, int golesVisitante, String estado) {
        EditarPartidoDialog editarPartido = new EditarPartidoDialog(this, rootPaneCheckingEnabled, pkPartido, golesLocal, golesVisitante, estado);
        editarPartido.setVisible(true);
    }

    // Crear directorio para guardar los escudos en caso de que no exista
    public void crearDirectorioEscudos() {
        File localDir = new File(LOCAL_FOLDER);
        if (!localDir.exists()) {
            localDir.mkdir();
        }
    }

    // Obtener el escudo favorito del usuario
    private void obtenerEscudoFavorito(int pkUsuario) {
        String fileName = obtenerDatos.obtenerDatosUsuario(pkUsuario).getEquipoFavorito().getEscudo();
        File tempFile = new File(LOCAL_FOLDER, fileName);

        if (!tempFile.exists()) {
            // Descargar el archivo si no existe
            try (Socket socket = new Socket(SERVER_IP, SERVER_PORT); PrintWriter writer = new PrintWriter(socket.getOutputStream(), true); InputStream in = socket.getInputStream(); FileOutputStream fileOut = new FileOutputStream(tempFile)) {

                writer.println("DOWNLOAD " + fileName);

                byte[] buffer = new byte[1024];
                int bytesRead;
                while ((bytesRead = in.read(buffer)) != -1) {
                    fileOut.write(buffer, 0, bytesRead);
                }
            } catch (IOException e) {
                System.err.println("Error al descargar el escudo favorito: " + fileName);
                e.printStackTrace();
                tempFile = null;
            }
        }

        File finalFile = (tempFile != null && tempFile.exists()) ? tempFile : null;

        SwingUtilities.invokeLater(() -> {
            ImageIcon iconoGrande = (finalFile != null) ? redimensionarImagen(finalFile, 100, 100) : obtenerEscudoPorDefecto();
            ImageIcon iconoPeque帽o = (finalFile != null) ? redimensionarImagen(finalFile, 20, 20) : obtenerEscudoPorDefecto();

            // Mostrar en escudoFavoritoPanel
            JLabel labelEscudo = new JLabel(iconoGrande);
            labelEscudo.setHorizontalAlignment(JLabel.CENTER);
            labelEscudo.setVerticalAlignment(JLabel.CENTER);

            escudoFavoritoPanel.setLayout(new BorderLayout());
            escudoFavoritoPanel.removeAll();
            escudoFavoritoPanel.add(labelEscudo, BorderLayout.CENTER);
            escudoFavoritoPanel.setPreferredSize(new Dimension(100, 100));
            escudoFavoritoPanel.revalidate();
            escudoFavoritoPanel.repaint();

            // Poner icono peque帽o en los menus
            editarEquipoFavMenuItem.setIcon(iconoPeque帽o);
            inicioMenu.setIcon(iconoPeque帽o);
        });
    }

    // Obtener el escudo del equipo seleccionado
    private void obtenerEscudo(int pkEquipo) {
        mostrarEscudoEnPanel(obtenerDatos.obtenerDatosEquipos(pkEquipo).getEscudo(), escudoEquipoPanel);
    }

    // Descargar el escudo y mostrarlo en un panel
    private void mostrarEscudoEnPanel(String fileName, JPanel panelDestino) {
        File tempFile = new File(LOCAL_FOLDER, fileName);

        if (!tempFile.exists()) {
            try (Socket socket = new Socket(SERVER_IP, SERVER_PORT); PrintWriter writer = new PrintWriter(socket.getOutputStream(), true); InputStream in = socket.getInputStream(); FileOutputStream fileOut = new FileOutputStream(tempFile)) {

                writer.println("DOWNLOAD " + fileName);

                byte[] buffer = new byte[1024];
                int bytesRead;
                while ((bytesRead = in.read(buffer)) != -1) {
                    fileOut.write(buffer, 0, bytesRead);
                }
            } catch (IOException e) {
                System.err.println("Error al descargar el escudo: " + fileName);
                e.printStackTrace();
                tempFile = null;
            }
        }

        File finalFile = (tempFile != null && tempFile.exists()) ? tempFile : null;

        SwingUtilities.invokeLater(() -> {
            ImageIcon icon = (finalFile != null) ? redimensionarImagen(finalFile, 100, 100) : obtenerEscudoPorDefecto();

            JLabel labelEscudo = new JLabel(icon);
            labelEscudo.setHorizontalAlignment(JLabel.CENTER);
            labelEscudo.setVerticalAlignment(JLabel.CENTER);

            panelDestino.setLayout(new BorderLayout());
            panelDestino.removeAll();
            panelDestino.add(labelEscudo, BorderLayout.CENTER);
            panelDestino.setPreferredSize(new Dimension(100, 100));
            panelDestino.revalidate();
            panelDestino.repaint();
        });
    }

    // Obtener el escudo por defecto para cuando no se pueda descargar
    private ImageIcon obtenerEscudoPorDefecto() {
        URL url = getClass().getClassLoader().getResource("images/escudoPlaceHolder.png");
        if (url != null) {
            return new ImageIcon(new ImageIcon(url).getImage().getScaledInstance(60, 60, Image.SCALE_SMOOTH));
        } else {
            System.out.println("Escudo por defecto no encontrado.");
            // Devuelve un icono vac铆o si no se encuentra el recurso
            return new ImageIcon();
        }
    }

    // M茅todo reutilizable para redimensionar im谩genes
    private ImageIcon redimensionarImagen(File file, int width, int height) {
        return new ImageIcon(new ImageIcon(file.getAbsolutePath()).getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH));
    }

    // Rellenar el combox de ligas con los datos obtenidos mediante el objeto obtener datos
    public void rellenarComboxLigas() {
        // Obtener las jornadas de la liga seleccionada
        List<String> nombresLigas = obtenerDatos.obtenerLigas();
        // Llenar el JComboBox con los nombres de las ligas
        for (String nombre : nombresLigas) {
            ligaComboBox.addItem(nombre);
        }
    }

    // Rellenar el combox de jornadas de acuerdo con la liga seleccionada en el comboBox de ligas con los datos obtenidos mediante el objeto obtener datos
    public void rellenarComboboxJornadas(String ligaSeleccionada) {
        List<Integer> numeroJornadas = obtenerDatos.obtenerJornadas(ligaSeleccionada);

        // Limpiar antes de agregar
        jornadaComboBox.removeAllItems();

        // Comprobar si hay jornadas
        if (numeroJornadas == null || numeroJornadas.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No hay jornadas disponibles para la liga seleccionada.", "Informaci贸n", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Rellenar comboBox con las jornadas
        for (Integer numero : numeroJornadas) {
            if (numero != null) {
                jornadaComboBox.addItem(String.valueOf(numero));
            }
        }
    }

    // M茅todo para cargar los resultados de los partidos
    public void mostrarResultadosPartidos() {
        // Obtener elementos seleccionados en los comboBox
        String ligaSeleccionada = (String) ligaComboBox.getSelectedItem();
        Object jornadaSeleccionadaObj = jornadaComboBox.getSelectedItem();

        // Evitar error cuando a煤n no hay valores seleccionados en los comboBox
        if (ligaSeleccionada == null || jornadaSeleccionadaObj == null) {
            return;
        }

        try {
            int jornadaSeleccionada = Integer.parseInt(jornadaSeleccionadaObj.toString());
            // Crear una lista de los partidos de la jornada y liga seleccionada
            List<Partidos> partidos = obtenerDatos.obtenerPartidosFiltrados(ligaSeleccionada, jornadaSeleccionada);
            // Cargar la lista en el modelo de la tabla
            PartidosTableModel model = new PartidosTableModel(partidos);
            // Actualizar la tabla
            partidosTable.setModel(model);
            // Escudo Local
            partidosTable.getColumnModel().getColumn(0).setCellRenderer(new ImageRenderer());
            // Escudo Visitante
            partidosTable.getColumnModel().getColumn(5).setCellRenderer(new ImageRenderer());
            // Estilizar la tabla
            EstiloTablaPartidos.estilizarTabla(partidosTable);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error al convertir jornada a n煤mero: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // M茅todo para cargar los partidos de un equipo
    public void mostrarResultadosPartidosEquipo(int pkEquipo) {

        try {
            // Crear una lista de los partidos de la jornada y liga seleccionada
            List<Partidos> partidos = obtenerDatos.obtenerPartidosEquipo(pkEquipo);
            // Cargar la lista en el modelo de la tabla
            PartidosEquipoTableModel model = new PartidosEquipoTableModel(partidos);
            // Actualizar la tabla
            partidosTableEquipo.setModel(model);
            // Escudo Local
            partidosTableEquipo.getColumnModel().getColumn(0).setCellRenderer(new ImageRenderer());
            // Escudo Visitante
            partidosTableEquipo.getColumnModel().getColumn(3).setCellRenderer(new ImageRenderer());
            // Estilizar la tabla
            EstiloTablaPartidosEquipo.estilizarTabla(partidosTableEquipo);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error al convertir jornada a n煤mero: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // M茅todo para cargar la clasificaci贸n de la liga seleccionada
    public void mostrarClasificacion() {
        // Obtener elementos seleccionados en los comboBox
        String ligaSeleccionada = (String) ligaComboBox.getSelectedItem();

        // Evitar error cuando a煤n no hay valores seleccionados en los comboBox
        if (ligaSeleccionada == null) {
            return;
        }

        // Crear una lista de los partidos de la jornada y liga seleccionada
        List<Clasificacion> clasificaciones = obtenerDatos.obtenerClasifiacionFiltrada(ligaSeleccionada);
        // Cargar la lista en el modelo de la tabla
        ClasificacionTableModel model = new ClasificacionTableModel(clasificaciones);
        // Actualizar la tabla
        clasificacionTable.setModel(model);
        // Estilizar la tabla
        EstiloTablaClasificacion.estilizarTabla(clasificacionTable);
        // Renderizar escudo
        clasificacionTable.getColumnModel().getColumn(1).setCellRenderer(new ImageRenderer());
    }

    // Editar equipo favorito
    public void editarEquipoFavoritoPerfil() {
        SelectorEquipos selectorEquipos = new SelectorEquipos(null, true, pkUsuario);
        selectorEquipos.setVisible(true);
    }

    // Agregar equipo favorito desde panel de equipo
    public void agregarEquipoFavorito(int pkEquipo) {
        // Eliminar todos los ActionListeners anteriores (si hay alguno)
        for (ActionListener al : agregarEquipoFavButton.getActionListeners()) {
            agregarEquipoFavButton.removeActionListener(al);
        }

        // A帽adir un ActionListener
        agregarEquipoFavButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                obtenerDatos.seleccionarEquipoFav(pkUsuario, pkEquipo);
                JOptionPane.showMessageDialog(null, "Equipo agregado como favorito", "", JOptionPane.INFORMATION_MESSAGE);
            }
        });
    }

    // Editar nombre del usuario
    private String editarNombreUsuario() {
        String nombre = (String) JOptionPane.showInputDialog(
                this,
                "Introduce un nuevo nombre.",
                "Editar nombre",
                JOptionPane.PLAIN_MESSAGE,
                null,
                null,
                null);

        // Llamar al metodo si el campo no esta vacio
        if (nombre != null && !nombre.isEmpty()) {
            obtenerDatos.actualizarNombreUsuario(nombre, pkUsuario);
        }

        return nombre;
    }

    // Editar correo del usuario
    private String editarCorreoUsuario() {
        String correo = (String) JOptionPane.showInputDialog(
                this,
                "Introduce un nuevo correo.",
                "Editar correo",
                JOptionPane.PLAIN_MESSAGE,
                null,
                null,
                null);

        // Llamar al metodo si el campo no esta vacio
        if (correo != null && !correo.isEmpty()) {
            obtenerDatos.actualizarCorreoUsuario(correo, pkUsuario);
        }

        return correo;
    }

    // Editar contrase帽a del usuario
    private String editarContrase帽aUsuario() {
        String contrase帽a = (String) JOptionPane.showInputDialog(
                this,
                "Introduce una nueva contrase帽a.",
                "Editar contrase帽a",
                JOptionPane.PLAIN_MESSAGE,
                null,
                null,
                null);

        // Llamar al metodo si el campo no esta vacio
        if (contrase帽a != null && !contrase帽a.isEmpty()) {
            obtenerDatos.actualizarContrase帽aUsuario(contrase帽a, pkUsuario);
        }

        return contrase帽a;
    }

    // Men煤 de ayuda
    private void ayuda() {
        try {
            // Carga el fichero de ayuda
            File fichero = new File("src/main/java/Ayuda/help_set.hs");
            URL hsURL = fichero.toURI().toURL();

            // Crea el HelpSet
            HelpSet helpset = new HelpSet(getClass().getClassLoader(), hsURL);
            HelpBroker hb = helpset.createHelpBroker();

            // Ayuda al hacer click en el JMenuItem itemAyuda.
            hb.enableHelpOnButton(ayudaMenuItem, "inicio", helpset);

            // Ayuda al pulsar F1 sobre la ventana principal
            hb.enableHelpKey(getRootPane(), "inicio", helpset);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // M茅todo para cabiar el estilo de la interfaz a clasico
    public void cambioClasico() {
        jToolBar1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        infoUsuarioPanel.setBackground(new java.awt.Color(0, 0, 0));
        escudoFavoritoPanel.setBackground(new java.awt.Color(0, 0, 0));
        equipoFavPanel.setBackground(new java.awt.Color(0, 0, 0));
        jPanel33.setBackground(new java.awt.Color(0, 0, 0));
        nombreUsuarioLabel.setForeground(new java.awt.Color(255, 255, 255));
        nombreLocalLabel.setForeground(new java.awt.Color(255, 255, 255));
        nombreVisitanteLabel.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jornadaComboBox.setBackground(new java.awt.Color(214, 217, 223));
        ligaComboBox.setBackground(new java.awt.Color(214, 217, 223));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jPanel5.setBackground(new java.awt.Color(0, 0, 0));
        jPanel13.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel7.setBackground(new java.awt.Color(0, 0, 0));
        jPanel31.setBackground(new java.awt.Color(0, 0, 0));
        escudoEquipoPanel.setBackground(new java.awt.Color(0, 0, 0));
        jPanel39.setBackground(new java.awt.Color(0, 0, 0));
        jPanel32.setBackground(new java.awt.Color(0, 0, 0));

        resultadosUsuarioButton.setForeground(new java.awt.Color(255, 255, 255));
        clasificacionUsuarioButton.setForeground(new java.awt.Color(255, 255, 255));
        usuarioButton.setForeground(new java.awt.Color(255, 255, 255));

        resultadosClasificacionButton.setForeground(new java.awt.Color(255, 255, 255));
        clasificacionButton.setForeground(new java.awt.Color(255, 255, 255));
        usuariosClasificacionButton.setForeground(new java.awt.Color(255, 255, 255));

        resultadosButton.setForeground(new java.awt.Color(255, 255, 255));
        clasificacionResultadosButton.setForeground(new java.awt.Color(255, 255, 255));
        usuarioResultadosButton.setForeground(new java.awt.Color(255, 255, 255));

        resultadosEquipoButton.setForeground(new java.awt.Color(255, 255, 255));
        clasificacionEquipoButton.setForeground(new java.awt.Color(255, 255, 255));
        usuarioEquipoButton.setForeground(new java.awt.Color(255, 255, 255));

        resultadosPartidoButton.setForeground(new java.awt.Color(255, 255, 255));
        clasificacionPartidoButton.setForeground(new java.awt.Color(255, 255, 255));
        usuarioPartidoButton.setForeground(new java.awt.Color(255, 255, 255));
        
        jPanel38.setBackground(new java.awt.Color(0, 0, 0));
        jPanel32.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
    }

    // M茅todo para cabiar el estilo de la interfaz por defecto
    public void cambioPorDefecto() {
        jToolBar1.setBackground(new java.awt.Color(229, 229, 0));
        jPanel2.setBackground(new java.awt.Color(229, 229, 0));
        jLabel1.setForeground(new java.awt.Color(0, 69, 193));
        jPanel4.setBackground(new java.awt.Color(229, 229, 0));
        infoUsuarioPanel.setBackground(new java.awt.Color(223, 31, 31));
        escudoFavoritoPanel.setBackground(new java.awt.Color(0, 181, 12));
        equipoFavPanel.setBackground(new java.awt.Color(0, 181, 12));
        jPanel33.setBackground(new java.awt.Color(0, 181, 12));
        nombreUsuarioLabel.setForeground(new java.awt.Color(229, 229, 0));
        nombreLocalLabel.setForeground(new java.awt.Color(229, 229, 0));
        nombreVisitanteLabel.setForeground(new java.awt.Color(229, 229, 0));
        jLabel2.setForeground(new java.awt.Color(229, 229, 0));
        jornadaComboBox.setBackground(new java.awt.Color(229, 229, 0));
        ligaComboBox.setBackground(new java.awt.Color(255, 0, 0));
        jLabel5.setForeground(new java.awt.Color(229, 229, 0));
        jPanel5.setBackground(new java.awt.Color(0, 51, 204));
        jPanel13.setBackground(new java.awt.Color(0, 51, 204));
        jPanel3.setBackground(new java.awt.Color(0, 51, 204));
        jPanel7.setBackground(new java.awt.Color(0, 51, 204));
        jPanel31.setBackground(new java.awt.Color(102, 102, 102));
        escudoEquipoPanel.setBackground(new java.awt.Color(102, 102, 102));
        jPanel39.setBackground(new java.awt.Color(102, 102, 102));
        jPanel32.setBackground(new java.awt.Color(102, 102, 102));

        resultadosUsuarioButton.setForeground(new java.awt.Color(102, 255, 255));
        clasificacionUsuarioButton.setForeground(new java.awt.Color(102, 255, 255));
        usuarioButton.setForeground(new java.awt.Color(102, 255, 255));

        resultadosClasificacionButton.setForeground(new java.awt.Color(102, 255, 255));
        clasificacionButton.setForeground(new java.awt.Color(102, 255, 255));
        usuariosClasificacionButton.setForeground(new java.awt.Color(102, 255, 255));

        resultadosButton.setForeground(new java.awt.Color(102, 255, 255));
        clasificacionResultadosButton.setForeground(new java.awt.Color(102, 255, 255));
        usuarioResultadosButton.setForeground(new java.awt.Color(102, 255, 255));

        resultadosEquipoButton.setForeground(new java.awt.Color(102, 255, 255));
        clasificacionEquipoButton.setForeground(new java.awt.Color(102, 255, 255));
        usuarioEquipoButton.setForeground(new java.awt.Color(102, 255, 255));

        resultadosPartidoButton.setForeground(new java.awt.Color(102, 255, 255));
        clasificacionPartidoButton.setForeground(new java.awt.Color(102, 255, 255));
        usuarioPartidoButton.setForeground(new java.awt.Color(102, 255, 255));

        jPanel38.setBackground(new java.awt.Color(255, 0, 0));
        jPanel32.setBackground(new java.awt.Color(255, 255, 0));
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem acercaDeMenuItem;
    private javax.swing.JButton agregarEquipoFavButton;
    private javax.swing.JMenu ajustesjMenu;
    private javax.swing.JPanel appPanel;
    private javax.swing.JMenu ayudaMenu;
    private javax.swing.JMenuItem ayudaMenuItem;
    private javax.swing.JMenuItem cambiarContrase帽aMenuItem;
    private javax.swing.JMenuItem cambiarCorreoMenuItem;
    private javax.swing.JMenuItem cambiarNombreMenuItem;
    private javax.swing.JButton clasificacionButton;
    private javax.swing.JButton clasificacionEquipoButton;
    private javax.swing.JPanel clasificacionPanel;
    private javax.swing.JButton clasificacionPartidoButton;
    private javax.swing.JButton clasificacionResultadosButton;
    private javax.swing.JTable clasificacionTable;
    private javax.swing.JButton clasificacionUsuarioButton;
    private javax.swing.JLabel correoUsuarioLabel;
    private javax.swing.JMenuItem crearPartidoMenuItem;
    private javax.swing.JMenu devMenu;
    private javax.swing.JButton editarEquipoFavButton;
    private javax.swing.JMenuItem editarEquipoFavMenuItem;
    private javax.swing.JButton editarPartidoButton;
    private javax.swing.JMenuItem editarRolMenuItem;
    private javax.swing.JPanel equipoFavPanel;
    private javax.swing.JLabel equipoFavoritoLabel;
    private javax.swing.JPanel equipoPanel;
    private javax.swing.JPanel escudoEquipoPanel;
    private javax.swing.JPanel escudoFavoritoPanel;
    private javax.swing.JLabel estadioEquipoLabel;
    private javax.swing.JLabel estadoLabel;
    private javax.swing.JCheckBoxMenuItem estiloInterfazCheckBoxMenuItem;
    private javax.swing.JLabel fechaPartidoLabel;
    private javax.swing.JLabel fechaRegistroUsuarioLabel;
    private javax.swing.JLabel golesLocalLabel;
    private javax.swing.JLabel golesVisitanteLabel;
    private javax.swing.JLabel idUsuarioLabel;
    private javax.swing.JPanel infoUsuarioPanel;
    private javax.swing.JMenu inicioMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JToolBar jToolBar5;
    private javax.swing.JToolBar jToolBar6;
    private javax.swing.JToolBar jToolBar7;
    private javax.swing.JComboBox<String> jornadaComboBox;
    private javax.swing.JLabel jornadaLabel;
    private javax.swing.JTable jugadoresEquipoTable;
    private javax.swing.JComboBox<String> ligaComboBox;
    private javax.swing.JLabel ligaEquipoLabel;
    private javax.swing.JLabel ligaLabel;
    private javax.swing.JPanel localPanel;
    private javax.swing.JMenuItem logoutMenuItem;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel nombreEquipoLabel;
    private javax.swing.JLabel nombreLocalLabel;
    private javax.swing.JLabel nombreUsuarioLabel;
    private javax.swing.JLabel nombreVisitanteLabel;
    private javax.swing.JLabel paisEquipoLabel;
    private javax.swing.JPanel partidoPanel;
    private javax.swing.JTable partidosTable;
    private javax.swing.JTable partidosTableEquipo;
    private javax.swing.JLabel posicionLigaEquipoLabel;
    private ComponentesModelos.ResizableImageLabel resizableImageLabel1;
    private ComponentesModelos.ResizableImageLabel resizableImageLabel2;
    private ComponentesModelos.ResizableImageLabel resizableImageLabel3;
    private javax.swing.JButton resultadosButton;
    private javax.swing.JPanel resultadosClasifiacionPanel;
    private javax.swing.JButton resultadosClasificacionButton;
    private javax.swing.JButton resultadosEquipoButton;
    private javax.swing.JPanel resultadosPanel;
    private javax.swing.JButton resultadosPartidoButton;
    private javax.swing.JButton resultadosUsuarioButton;
    private javax.swing.JLabel rolUsuarioLabel;
    private javax.swing.JMenuItem salirMenuItem;
    private javax.swing.JPanel userPanel;
    private javax.swing.JButton usuarioButton;
    private javax.swing.JButton usuarioEquipoButton;
    private javax.swing.JButton usuarioPartidoButton;
    private javax.swing.JButton usuarioResultadosButton;
    private javax.swing.JButton usuariosClasificacionButton;
    private javax.swing.JPanel visitantePanel;
    private javax.swing.JMenuItem webMenuItem;
    // End of variables declaration//GEN-END:variables
}
